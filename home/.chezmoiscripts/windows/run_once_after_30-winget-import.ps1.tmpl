#requires -version 7 -modules Microsoft.PowerShell.Utility

<#
.SYNOPSIS
Import WinGet installed apps.
Will install apps if not found but not upgrade them.
#>
[CmdletBinding(SupportsShouldProcess)]
param()

<#
{{ $wingetManifestTemplatePath := joinPath .chezmoi.workingTree "assets/windows/winget.json.tmpl" -}}
assets/windows/winget.json hash: {{ include $wingetManifestTemplatePath | sha256sum }}
roles: {{ .roles }}
#>

$wingetManifestTemplate = "{{ $wingetManifestTemplatePath }}" | Get-Item -ErrorAction Stop

# MSCRAP: winget import cannot process JSON comments, so we have to clean those out (by using ConvertTo/From-Json).
$wingetManifest = New-TemporaryFile -WhatIf:$false
$wingetManifestTemplate | Get-Content -Raw | chezmoi execute-template | ConvertFrom-Json | ConvertTo-Json -Depth 4 | Out-File -FilePath $wingetManifest

Write-Verbose "winget manifest at ${wingetManifest}"

Invoke-Operation "Import WinGet manifest" -WhatIf:$WhatIfPreference {
    # MSCRAP: Microsoft.WinGet.Client has export but NOT import (1.10.40-beta)
    winget import --import-file $wingetManifest --no-upgrade --accept-package-agreements --accept-source-agreements --disable-interactivity
}