#!/usr/bin/env bash
#
# Oracle functions
#

# See if we have an oratab file; if so, remember it.
if [ -z "${oratab:+${oratab}}" ] ; then
    declare oratab
    for oratab in /var/opt/oracle/oratab /etc/oratab ; do
        if [ -e "${oratab}" ] ; then
            export oratab
            break
        fi
    done
fi

set_oracle_home() {
    local new_home="${1?Value cannot be null or empty}"
    if [ ! -d "${new_home}" ] ; then
        echo >&2 "set_oracle_home: Path '${new_home}' does not exist'"
        return 1
    fi

    # Update PATH if the variable is already set to a non-empty value
    if [ -n "${ORACLE_HOME:+${ORACLE_HOME}}" ] ; then
        # ASSUMPTION: Not windows.
        export PATH="${PATH//:${ORACLE_HOME}/:${new_home}}"
    fi

    export ORACLE_HOME="${new_home}"
}

list_oracle_sids() {
    if [ -z "${oratab+x}" ] ; then
        return 1
    elif ! [ -e "${oratab}" ] ; then
        return 1
    fi

    grep -P '^\s*[^#]' "${oratab}" | cut -d : -f 1
}

# 0 - ORACLE_SID and ORACLE_HOME set
# 1 - only ORACLE_SID set
# 2 - nothing set
# ? - error
set_oracle_sid() {
    local sid_or_pos="${1:-1}"      # default to first one (ONE-BASED POSITION)

    local readonly num_re='^[0-9]+$'
    local sid
    if [[ "${sid_or_pos}" =~ ${num_re} ]] ; then
        # numeric: it's a position in the file 
        local -i pos=$((sid_or_pos-1))
        [ $pos -lt 0 ] && return 2   # invalid position
        local -a sids
        mapfile -t sids < <(list_oracle_sids)
        [ $pos -ge  ${#sids[@]} ] && return 2  # invalid position
        sid=${sids[pos]}
    else
        # it's a SID
        sid="${sid_or_pos}"
    fi

    if [ -z "${sid}" ] ; then
        return 2 # NO SID
    fi
    export ORACLE_SID="${sid}"

    if [ ! -e "${oratab+${oratab}}" ]; then
        echo >&2 "We have a SID but oratab is invalid"
        return 1 # SID, no ORACLE_HOME
    fi

    local oracle_home="$(grep -P "^${ORACLE_SID}:" "${oratab}" | cut -d : -f 2)"
    if [ -n "${oracle_home}" ] ; then
        if set_oracle_home "${oracle_home}" ; then
            return 0
        else
            return 1
        fi
    fi

    echo >&2 "We have a SID but no ORACLE_HOME"
    return 1
}

set_oracle_dbname() {
    local dbname="${1?You must specify a valid database name.}"
    export ORACLE_UNQNAME="${dbname}"   # modern name
    export TWO_TASK="${dbname}"         # what SQL*Plus uses to determine default host
}

unset_oracle_sid() {
    unset ORACLE_SID
}

unset_oracle_dbname() {
    unset ORACLE_UNQNAME TWO_TASK
}

export -f set_oracle_home list_oracle_sids set_oracle_sid set_oracle_dbname unset_oracle_sid unset_oracle_dbname
